{"version":3,"file":"ImportCorruptFix.js","mappings":"mBACA,MAsBMA,EAAsB,CACxBC,KAvBS,KACTC,YAAW,KACP,MAAMC,EAAIC,KAAKC,QAAgB,OAAEC,SAEjCH,EAAEI,QAAU,CAACC,EAAKC,KACd,GAAIA,GAAQD,EAAIC,KACZ,OAAO,GACE,GAATA,IAA+B,GAAjBN,EAAEM,KAAKA,IACrBN,EAAEO,SAASP,EAAEM,KAAKA,IAAOA,KAAOD,EAAIC,MACnB,GAAbD,EAAIC,OACJN,EAAEM,KAAKD,EAAIC,MAAQN,EAAEM,KAAKA,MAEZ,GAAbD,EAAIC,OACTN,EAAEM,KAAKD,EAAIC,OAAS,IACX,GAATA,IACAN,EAAEM,KAAKA,GAAQD,EAAIG,IACvBH,EAAIC,KAAOA,EAEXL,KAAKQ,kBAAmB,CAAI,CAC/B,GACF,IAAI,GAKU,oBAAVC,MAEPX,YAAW,WACPE,KAAKU,YAAY,mBAAoBd,EACzC,GAAG,KAGHI,KAAKU,YAAY,mBAAoBd,E","sources":["webpack://cookie-clicker-no-corrupt/./src/main.ts"],"sourcesContent":["\"use strict\";\nconst init = () => {\n    setTimeout(() => {\n        const M = Game.Objects[\"Temple\"].minigame;\n        // @ts-ignore\n        M.slotGod = (god, slot) => {\n            if (slot == god.slot)\n                return false;\n            if (slot != -1 && M.slot[slot] != -1) {\n                M.godsById[M.slot[slot]].slot = god.slot;\n                if (god.slot != -1)\n                    M.slot[god.slot] = M.slot[slot];\n            }\n            else if (god.slot != -1)\n                M.slot[god.slot] = -1;\n            if (slot != -1)\n                M.slot[slot] = god.id;\n            god.slot = slot;\n            // @ts-ignore\n            Game.recalculateGains = true;\n        };\n    }, 500);\n};\nconst ImportCorruptFixMod = {\n    init: init,\n};\nif (typeof Steam !== 'undefined') {\n    // Wait for Steam to load\n    setTimeout(function () {\n        Game.registerMod('ImportCorruptFix', ImportCorruptFixMod);\n    }, 2000);\n}\nelse {\n    Game.registerMod('ImportCorruptFix', ImportCorruptFixMod);\n}\n"],"names":["ImportCorruptFixMod","init","setTimeout","M","Game","Objects","minigame","slotGod","god","slot","godsById","id","recalculateGains","Steam","registerMod"],"sourceRoot":""}